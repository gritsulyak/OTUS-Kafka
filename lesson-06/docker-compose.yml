services:
  zoo1:
    image: zookeeper:latest
    restart: always
    container_name: zoo1
    hostname: zoo1
    ports:
      - 12181:2181
      - 18080:8080
      - 10020:10020
    environment:
      ZOO_MY_ID: 1
      ZOO_SERVERS: server.1=zoo1:2888:3888;2181 server.2=zoo2:2888:3888;2181 server.3=zoo3:2888:3888;2181
      ZOO_ADMINSERVER_ENABLED: true
      ZOO_4LW_COMMANDS_WHITELIST: "*"
      JMX_PORT: 10020
      JVMFLAGS: "-Dcom.sun.management.jmxremote=true -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false -Dcom.sun.management.jmxremote.port=10020 -Dcom.sun.management.jmxremote.rmi.port=10020 -Djava.rmi.server.hostname=0.0.0.0 -Djava.net.preferIPv4Stack=true"
    volumes:
      - zoo1-data:/data
      - zoo1-datalog:/datalog

  zoo2:
    image: zookeeper:latest
    restart: always
    container_name: zoo2
    hostname: zoo2
    ports:
      - 22181:2181
      - 28080:8080
      - 20020:20020
    environment:
      ZOO_MY_ID: 2
      ZOO_SERVERS: server.1=zoo1:2888:3888;2181 server.2=zoo2:2888:3888;2181 server.3=zoo3:2888:3888;2181
      ZOO_ADMINSERVER_ENABLED: true
      ZOO_4LW_COMMANDS_WHITELIST: "*"
      JMX_PORT: 20020
      JVMFLAGS: "-Dcom.sun.management.jmxremote=true -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false -Dcom.sun.management.jmxremote.port=20020 -Dcom.sun.management.jmxremote.rmi.port=20020 -Djava.rmi.server.hostname=0.0.0.0 -Djava.net.preferIPv4Stack=true"
    volumes:
      - zoo2-data:/data
      - zoo2-datalog:/datalog

  zoo3:
    image: zookeeper:latest
    restart: always
    container_name: zoo3
    hostname: zoo3
    ports:
      - 32181:2181
      - 38080:8080
      - 20120:20120
    environment:
      ZOO_MY_ID: 3
      ZOO_SERVERS: server.1=zoo1:2888:3888;2181 server.2=zoo2:2888:3888;2181 server.3=zoo3:2888:3888;2181
      ZOO_ADMINSERVER_ENABLED: true
      ZOO_4LW_COMMANDS_WHITELIST: "*"
      JMX_PORT: 20120
      JVMFLAGS: "-Dcom.sun.management.jmxremote=true -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false -Dcom.sun.management.jmxremote.port=20120 -Dcom.sun.management.jmxremote.rmi.port=20120 -Djava.rmi.server.hostname=0.0.0.0 -Djava.net.preferIPv4Stack=true"
    volumes:
      - zoo3-data:/data
      - zoo3-datalog:/datalog

  kafka1:
    image: confluentinc/cp-kafka:7.2.15
    container_name: kafka1
    hostname: kafka1
    ports:
      - 19092:9092
      - 17071:7071
      - 10030:10030
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zoo1:2181,zoo2:2181,zoo3:2181/kafka
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://:9092,EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:19092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_LOG4J_ROOT_LOGLEVEL: INFO
      KAFKA_CONFLUENT_SUPPORT_METRICS_ENABLE: "false"
      KAFKA_JMX_PORT: 10030
      KAFKA_JMX_HOSTNAME: localhost
      KAFKA_JMX_OPTS: "-Dcom.sun.management.jmxremote=true -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false -Dcom.sun.management.jmxremote.port=10030 -Dcom.sun.management.jmxremote.rmi.port=10030 -Djava.rmi.server.hostname=0.0.0.0 -Djava.net.preferIPv4Stack=true"
      KAFKA_OPTS: "-javaagent:/opt/kafka/jmx_javaagent/jmx_prometheus_javaagent-0.20.0.jar=7071:/opt/kafka/jmx_javaagent/kafka-2_0_0.yml"
    volumes:
      - kafka1-data:/var/lib/kafka/data
      - ./jmx_exporter:/opt/kafka/jmx_javaagent
    depends_on:
      - zoo1
      - zoo2
      - zoo3

  kafka2:
    image: confluentinc/cp-kafka:7.2.15
    container_name: kafka2
    hostname: kafka2
    ports:
      - 29092:9092
      - 27072:7071
      - 10130:10130
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: zoo1:2181,zoo2:2181,zoo3:2181/kafka
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://:9092,EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_LOG4J_ROOT_LOGLEVEL: INFO
      KAFKA_CONFLUENT_SUPPORT_METRICS_ENABLE: "false"
      KAFKA_JMX_PORT: 10130
      KAFKA_JMX_HOSTNAME: localhost
      KAFKA_JMX_OPTS: "-Dcom.sun.management.jmxremote=true -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false -Dcom.sun.management.jmxremote.port=10130 -Dcom.sun.management.jmxremote.rmi.port=10130 -Djava.rmi.server.hostname=0.0.0.0 -Djava.net.preferIPv4Stack=true"
      KAFKA_OPTS: "-javaagent:/opt/kafka/jmx_javaagent/jmx_prometheus_javaagent-0.20.0.jar=7071:/opt/kafka/jmx_javaagent/kafka-2_0_0.yml"
    volumes:
      - kafka2-data:/var/lib/kafka/data
      - ./jmx_exporter:/opt/kafka/jmx_javaagent
    depends_on:
      - zoo1
      - zoo2
      - zoo3

  kafka3:
    image: confluentinc/cp-kafka:7.2.15
    container_name: kafka3
    hostname: kafka3
    ports:
      - 39092:9092
      - 37073:7071
      - 10230:10230
    environment:
      KAFKA_BROKER_ID: 3
      KAFKA_ZOOKEEPER_CONNECT: zoo1:2181,zoo2:2181,zoo3:2181/kafka
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://:9092,EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:39092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_LOG4J_ROOT_LOGLEVEL: INFO
      KAFKA_CONFLUENT_SUPPORT_METRICS_ENABLE: "false"
      KAFKA_JMX_PORT: 10230
      KAFKA_JMX_HOSTNAME: localhost
      KAFKA_JMX_OPTS: "-Dcom.sun.management.jmxremote=true -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false -Dcom.sun.management.jmxremote.port=10230 -Dcom.sun.management.jmxremote.rmi.port=10230 -Djava.rmi.server.hostname=0.0.0.0 -Djava.net.preferIPv4Stack=true"
      KAFKA_OPTS: "-javaagent:/opt/kafka/jmx_javaagent/jmx_prometheus_javaagent-0.20.0.jar=7071:/opt/kafka/jmx_javaagent/kafka-2_0_0.yml"
    volumes:
      - kafka3-data:/var/lib/kafka/data
      - ./jmx_exporter:/opt/kafka/jmx_javaagent
    depends_on:
      - zoo1
      - zoo2
      - zoo3

  kafka-exporter:
    image: danielqsj/kafka-exporter
    container_name: exporter
    hostname: exporter
    ports:
      - 9308:9308
    command: ["--kafka.server=kafka1:9092", "--kafka.server=kafka2:9092", "--kafka.server=kafka3:9092"]
    depends_on:
      - zoo1
      - zoo2
      - zoo3
      - kafka1
      - kafka2
      - kafka3

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    hostname: prometheus
    ports:
      - 9090:9090
    volumes:
      - ./prometheus:/etc/prometheus

  grafana:
    image: grafana/grafana:10.0.0
    container_name: grafana
    hostname: grafana
    ports:
      - 3000:3000
    volumes:
      - grafana-data:/var/lib/grafana

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    hostname: kafka-ui
    ports:
      - 8080:8080
    depends_on:
      - zoo1
      - zoo2
      - zoo3
      - kafka1
      - kafka2
      - kafka3
    environment:
      DYNAMIC_CONFIG_ENABLED: 'true'
    volumes:
      - ./kui/config.yml:/etc/kafkaui/dynamic_config.yaml

volumes:
  zoo1-data:
  zoo1-datalog:
  zoo2-data:
  zoo2-datalog:
  zoo3-data:
  zoo3-datalog:
  kafka1-data:
  kafka2-data:
  kafka3-data:
  grafana-data:
